{"version":3,"sources":["features/userSlice.js","Components/Blogs.js","Components/Homepage.js","Components/Navbar.js","App.js","app/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","isSignedIn","userData","searchInput","blogData","reducers","setSignedIn","state","action","payload","setUserData","setInput","setBlogData","actions","selectSignedIn","user","selectUserData","selectUserInput","Blogs","useSelector","blog_url","dispatch","useDispatch","useState","blogs","setBlogs","loading","setLoading","useEffect","axios","get","then","response","data","catch","error","console","log","className","articles","map","blog","target","href","url","src","image","source","publishedAt","title","description","totalArticles","Homepage","login","profileObj","style","display","clientId","render","renderProps","onClick","disabled","onSuccess","onFailure","cookiePolicy","Navbar","inputValue","setInputValue","placeholder","value","onChange","e","preventDefault","Avatar","imageUrl","alt","givenName","onLogoutSuccess","App","configureStore","reducer","userReducer","ReactDOM","store","document","getElementById"],"mappings":"+TAEMA,EAAYC,YAAY,CAC5BC,KAAM,OACNC,aAAc,CACZC,YAAY,EACZC,SAAU,KACVC,YAAa,OACbC,SAAU,MAEZC,SAAU,CACRC,YAAa,SAACC,EAAOC,GACnBD,EAAMN,WAAaO,EAAOC,SAE5BC,YAAa,SAACH,EAAOC,GACnBD,EAAML,SAAWM,EAAOC,SAE1BE,SAAU,SAACJ,EAAOC,GAChBD,EAAMJ,YAAcK,EAAOC,SAE7BG,YAAa,SAACL,EAAOC,GACnBD,EAAMH,SAAWI,EAAOC,Y,EAU1BZ,EAAUgB,QAJZP,E,EAAAA,YACAI,E,EAAAA,YACAC,E,EAAAA,SACAC,E,EAAAA,YAGWE,EAAiB,SAACP,GAAD,OAAWA,EAAMQ,KAAKd,YACvCe,EAAiB,SAACT,GAAD,OAAWA,EAAMQ,KAAKb,UACvCe,EAAkB,SAACV,GAAD,OAAWA,EAAMQ,KAAKZ,aAGtCN,IAAf,QCoBeqB,G,MAnDD,WAAO,IAAD,EACZf,EAAcgB,YAAYF,GAC1BG,EAAQ,2CAAuCjB,EAAvC,2CACRkB,EAAWC,cAHC,EAIQC,qBAJR,mBAIXC,EAJW,KAIJC,EAJI,OAMYF,oBAAS,GANrB,mBAMXG,EANW,KAMFC,EANE,KAqBlB,OAbAC,qBAAU,WACRC,IACGC,IAAIV,GACJW,MAAK,SAACC,GACLX,EAAST,EAAYoB,EAASC,OAC9BR,EAASO,EAASC,MAClBN,GAAW,MAEZO,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,CAAChC,IAGF,yBAAKmC,UAAU,cACb,wBAAIA,UAAU,sBAAd,SACCZ,EAAU,wBAAIY,UAAU,WAAd,cAA0C,GACrD,yBAAKA,UAAU,SAAf,OACGd,QADH,IACGA,GADH,UACGA,EAAOe,gBADV,aACG,EAAiBC,KAAI,SAACC,GAAD,OACpB,uBAAGH,UAAU,OAAOI,OAAO,SAASC,KAAMF,EAAKG,KAC7C,yBAAKC,IAAKJ,EAAKK,QACf,6BACE,wBAAIR,UAAU,cACZ,8BAAOG,EAAKM,OAAOhD,MACnB,2BAAI0C,EAAKO,cAEX,4BAAKP,EAAKQ,OACV,2BAAIR,EAAKS,kBAKU,IAAnB,OAAL1B,QAAK,IAALA,OAAA,EAAAA,EAAO2B,gBACN,wBAAIb,UAAU,aAAd,sG,iBCOKc,G,MA5CE,WACf,IAAMnD,EAAakB,YAAYL,GAEzBO,EAAWC,cACX+B,EAAQ,SAACrB,GACbI,QAAQC,IAAIL,GACZX,EAASf,GAAY,IACrBe,EAASX,EAAYsB,EAASsB,cAGhC,OACE,yBAAKhB,UAAU,aAAaiB,MAAO,CAAEC,QAASvD,EAAa,OAAS,KAChEA,EA0BA,GAzBA,yBAAKqC,UAAU,kBACb,4CACA,0DACA,4IAIA,kBAAC,IAAD,CACEmB,SAAS,4EACTC,OAAQ,SAACC,GAAD,OACN,4BACEC,QAASD,EAAYC,QACrBC,SAAUF,EAAYE,SACtBvB,UAAU,iBAHZ,sBAQFwB,UAAWT,EACXU,UAAWV,EACXpD,YAAY,EACZ+D,aAAc,2B,QCgCXC,G,MA/DA,WAAO,IAAD,EACiB1C,mBAAS,QAD1B,mBACZ2C,EADY,KACAC,EADA,KAEblE,EAAakB,YAAYL,GACzBZ,EAAWiB,YAAYH,GAEvBK,EAAWC,cAYjB,OACE,yBAAKgB,UAAU,UACb,wBAAIA,UAAU,kBAAd,0BACCrC,GACC,yBAAKqC,UAAU,gBACb,2BACEA,UAAU,SACV8B,YAAY,oBACZC,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAAcI,EAAE7B,OAAO2B,UAE1C,4BAAQ/B,UAAU,SAASsB,QAhBf,SAACW,GACnBA,EAAEC,iBACFnD,EAASV,EAASuD,MAcZ,WAMHjE,EACC,yBAAKqC,UAAU,sBACb,kBAACmC,EAAA,EAAD,CACEnC,UAAU,OACVO,IAAG,OAAE3C,QAAF,IAAEA,OAAF,EAAEA,EAAUwE,SACfC,IAAG,OAAEzE,QAAF,IAAEA,OAAF,EAAEA,EAAUH,OAEjB,wBAAIuC,UAAU,YAAd,OAA0BpC,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAU0E,WACpC,kBAAC,eAAD,CACEnB,SAAS,4EACTC,OAAQ,SAACC,GAAD,OACN,4BACEC,QAASD,EAAYC,QACrBC,SAAUF,EAAYE,SACtBvB,UAAU,kBAHZ,wBAQFuC,gBA9CK,SAAC7C,GACdX,EAASf,GAAY,IACrBe,EAASX,EAAY,WAgDjB,wBAAI4B,UAAU,eAAd,sCCnDOwC,G,MAZH,WACV,IAAM7E,EAAakB,YAAYL,GAE/B,OACE,yBAAKwB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACCrC,GAAc,kBAAC,EAAD,SCZN8E,cAAe,CAC5BC,QAAS,CACPjE,KAAMkE,KCEVC,IAASxB,OACP,kBAAC,IAAD,CAAUyB,MAAOA,GACf,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0fc1b47f.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    isSignedIn: false,\r\n    userData: null,\r\n    searchInput: \"tech\",\r\n    blogData: null,\r\n  },\r\n  reducers: {\r\n    setSignedIn: (state, action) => {\r\n      state.isSignedIn = action.payload;\r\n    },\r\n    setUserData: (state, action) => {\r\n      state.userData = action.payload;\r\n    },\r\n    setInput: (state, action) => {\r\n      state.searchInput = action.payload;\r\n    },\r\n    setBlogData: (state, action) => {\r\n      state.blogData = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setSignedIn,\r\n  setUserData,\r\n  setInput,\r\n  setBlogData,\r\n} = userSlice.actions;\r\n\r\nexport const selectSignedIn = (state) => state.user.isSignedIn;\r\nexport const selectUserData = (state) => state.user.userData;\r\nexport const selectUserInput = (state) => state.user.searchInput;\r\nexport const selectBlogData = (state) => state.user.blogData;\r\n\r\nexport default userSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUserInput, setBlogData } from \"../features/userSlice\";\r\n\r\nimport \"../styling/blogs.css\";\r\n\r\nconst Blogs = () => {\r\n  const searchInput = useSelector(selectUserInput);\r\n  const blog_url = `https://gnews.io/api/v4/search?q=${searchInput}&token=ff2c6afec0a9c29c00170fffc9f2f68c`;\r\n  const dispatch = useDispatch();\r\n  const [blogs, setBlogs] = useState();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(blog_url)\r\n      .then((response) => {\r\n        dispatch(setBlogData(response.data));\r\n        setBlogs(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [searchInput]);\r\n\r\n  return (\r\n    <div className=\"blog__page\">\r\n      <h1 className=\"blog__page__header\">Blogs</h1>\r\n      {loading ? <h1 className=\"loading\">Loading...</h1> : \"\"}\r\n      <div className=\"blogs\">\r\n        {blogs?.articles?.map((blog) => (\r\n          <a className=\"blog\" target=\"_blank\" href={blog.url}>\r\n            <img src={blog.image} />\r\n            <div> \r\n              <h3 className=\"sourceName\">\r\n                <span>{blog.source.name}</span>\r\n                <p>{blog.publishedAt}</p>\r\n              </h3>\r\n              <h1>{blog.title}</h1>\r\n              <p>{blog.description}</p>\r\n            </div>\r\n          </a>\r\n        ))}\r\n\r\n        {blogs?.totalArticles == 0 && (\r\n          <h1 className=\"no__blogs\">\r\n            No blogs available ðŸ˜ž. Search something else to read blogs on the\r\n            greatest platform.\r\n          </h1>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blogs;\r\n","import React from \"react\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectSignedIn,\r\n  setSignedIn,\r\n  setUserData,\r\n} from \"../features/userSlice\";\r\n\r\nimport \"../styling/home.css\";\r\n\r\nconst Homepage = () => {\r\n  const isSignedIn = useSelector(selectSignedIn);\r\n\r\n  const dispatch = useDispatch();\r\n  const login = (response) => {\r\n    console.log(response);\r\n    dispatch(setSignedIn(true));\r\n    dispatch(setUserData(response.profileObj));\r\n  };\r\n\r\n  return (\r\n    <div className=\"home__page\" style={{ display: isSignedIn ? \"none\" : \"\" }}>\r\n      {!isSignedIn ? (\r\n        <div className=\"login__message\">\r\n          <h2>ðŸ“—</h2>\r\n          <h1>A Readers favourite place!</h1>\r\n          <p>\r\n            We provide high quality online resource for reading blogs. Just sign\r\n            up and start reading some quality blogs.\r\n          </p>\r\n          <GoogleLogin\r\n            clientId=\"1084334404054-jch76dh3eqbj787ostatku2t93h61muv.apps.googleusercontent.com\"\r\n            render={(renderProps) => (\r\n              <button\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n                className=\"login__button\"\r\n              >\r\n                Login with Google\r\n              </button>\r\n            )}\r\n            onSuccess={login}\r\n            onFailure={login}\r\n            isSignedIn={true }\r\n            cookiePolicy={\"single_host_origin\"}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { GoogleLogout } from \"react-google-login\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectSignedIn,\r\n  selectUserData,\r\n  setInput,\r\n  setSignedIn,\r\n  setUserData,\r\n} from \"../features/userSlice\";\r\n\r\nimport \"../styling/navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  const [inputValue, setInputValue] = useState(\"tech\");\r\n  const isSignedIn = useSelector(selectSignedIn);\r\n  const userData = useSelector(selectUserData);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logout = (response) => {\r\n    dispatch(setSignedIn(false));\r\n    dispatch(setUserData(null));\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setInput(inputValue));\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h1 className=\"navbar__header\">BlogMania ðŸ’¬</h1>\r\n      {isSignedIn && (\r\n        <div className=\"blog__search\">\r\n          <input\r\n            className=\"search\"\r\n            placeholder=\"Search for a blog\"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n          />\r\n          <button className=\"submit\" onClick={handleClick}>\r\n            Search\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {isSignedIn ? (\r\n        <div className=\"navbar__user__data\">\r\n          <Avatar\r\n            className=\"user\"\r\n            src={userData?.imageUrl}\r\n            alt={userData?.name}\r\n          />\r\n          <h1 className=\"signedIn\">{userData?.givenName}</h1>\r\n          <GoogleLogout\r\n            clientId=\"1084334404054-jch76dh3eqbj787ostatku2t93h61muv.apps.googleusercontent.com\"\r\n            render={(renderProps) => (\r\n              <button\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n                className=\"logout__button\"\r\n              >\r\n                Logout ðŸ˜¦\r\n              </button>\r\n            )}\r\n            onLogoutSuccess={logout}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <h1 className=\"notSignedIn\">User not available ðŸ˜ž</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Blogs from \"./Components/Blogs\";\r\nimport Homepage from \"./Components/Homepage\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport { selectSignedIn } from \"./features/userSlice\";\r\nimport \"./styling/app.css\";\r\n\r\nconst App = () => {\r\n  const isSignedIn = useSelector(selectSignedIn);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Navbar />\r\n      <Homepage />\r\n      {isSignedIn && <Blogs />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"../features/userSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./app/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}