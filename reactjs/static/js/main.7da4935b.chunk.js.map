{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","components/Header/Header.js","components/Defination/Definitions.js","components/Dictionary.js","components/flipdish-ringer.mp3","components/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","dictionaryText","timerText","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","About","myStyle","defaultProps","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","Header","input","setInput","TextField","label","variant","e","Definitions","meanings","borderRadius","src","phonetics","audio","controls","map","mean","item","definitions","def","definition","width","example","synonyms","s","Dictionary","setMeanings","dictionaryApiData","a","axios","get","data","console","log","useEffect","Container","maxWidth","diaplay","flexDirection","Timer","setValue","duration","setDuration","timerFlag","setTimerFlag","Audio","ringer","myRef","useRef","dur_val","setInterval","setTimeout","current","loop","play","nowp","parseInt","fluid","Row","Col","Card","as","Body","Title","name","Button","pause","Footer","ProgressBar","now","App","setMode","setAlert","message","document","body","Date","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7da4935b.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/dictionary\">{props.dictionaryText}</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/timer\">{props.timerText}</Link>\n                        </li>\n                         <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n                        </li>\n                    </ul>\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: 'Set title here',\n    aboutText: 'About',\n    dictionaryText:'Dictionary',\n    timerText:'Timer'\n  };","import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n    const handleUpClick = ()=>{\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"Converted to uppercase!\", \"success\");\n    }\n\n    const handleLoClick = ()=>{ \n        let newText = text.toLowerCase();\n        setText(newText)\n        props.showAlert(\"Converted to lowercase!\", \"success\");\n    }\n\n    const handleClearClick = ()=>{ \n        let newText = '';\n        setText(newText);\n        props.showAlert(\"Text Cleared!\", \"success\");\n    }\n\n    const handleOnChange = (event)=>{\n        setText(event.target.value) \n    }\n\n    // Credits: A\n    const handleCopy = () => {\n        navigator.clipboard.writeText(text); \n        props.showAlert(\"Copied to Clipboard!\", \"success\");\n    }\n\n    // Credits: Coding Wala\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra spaces removed!\", \"success\");\n    }\n\n    const [text, setText] = useState(''); \n    // text = \"new text\"; // Wrong way to change the state\n    // setText(\"new text\"); // Correct way to change the state\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \n            <h1 className='mb-4'>{props.heading}</h1>\n            <div className=\"mb-3\"> \n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n            <h2>Your text summary</h2>\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n            <p>{text.split(/\\r?\\n|\\r/).length-1} paragraphs</p>\n            <p>{0.008 *  text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function About(props) {\n\n    // const [myStyle, setMyStyle] = useState({\n    //     color: 'black',\n    //     backgroundColor: 'white'\n    // }) \n    let myStyle = {\n        color: props.mode ==='dark'?'white':'#042743',\n        backgroundColor: props.mode ==='dark'?'rgb(36 74 104)':'white', \n    }\n    \n    return (\n        <div className=\"container\">\n            <h1 className=\"my-3\" style={{color: props.mode ==='dark'?'white':'#042743'}}>About Us</h1>\n            <div className=\"accordion\" id=\"accordionExample\">\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\n                    <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                    <strong>Analyze Your text </strong>\n                    </button>\n                    </h2>\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n                    <div className=\"accordion-body\" style={myStyle}>\n                    Textutils gives you a way to analyze your text quickly and efficiently. Be it word count, character count or \n\n                    </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                    <strong>Free to use </strong>\n                    </button>\n                    </h2>\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n                    <div className=\"accordion-body\" style={myStyle}>\n                    TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\n                    </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                    <strong>Browser Compatible </strong>\n                    </button>\n                    </h2>\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n                    <div className=\"accordion-body\" style={myStyle}>\n                    This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\n\n                    </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div style={{height: '50px'}}>\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \n        </div>}\n        </div>\n    )\n}\n\nexport default Alert\n","import React from 'react'\r\nimport './Header.css';\r\nimport TextField from '@mui/material/TextField';\r\nconst Header = ({ input, setInput }) => {\r\n \r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <span className=\"title\">{input ? input : 'Word Finder'}</span>\r\n            <div className=\"inputs\">\r\n                \r\n                    <TextField\r\n                        className=\"search\"\r\n                        label=\"Search Your Word\"\r\n                        variant=\"standard\"\r\n                        value={input}\r\n                        onChange={(e) => { setInput(e.target.value) }}\r\n                    />\r\n                 \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\";\nimport \"./Definitions.css\";\n\nconst Definitions = ({ meanings, word }) => {\n  return (\n    <div className=\"meanings\">\n      {/* audio---------------------------- */}\n      {meanings[0] && word && (\n        <audio\n          style={{ backgroundColor: \"#fff\", borderRadius: 10 }}\n          src={meanings[0].phonetics[0] && meanings[0].phonetics[0].audio}\n          controls\n        >\n          Your browser does not support the audio element.\n        </audio>\n      )}\n      {/* audio---------------------------- */}\n\n      {word === \"\" ? (\n        <span className=\"subTitle\">Start by typing a word in search</span>\n      ) : (\n        meanings.map((mean) =>\n          mean.meanings.map((item) =>\n            item.definitions.map((def) => (\n              <div\n                className=\"singleMean\"\n             \n              >\n                <b>{def.definition}</b>\n                <hr style={{ backgroundColor: \"black\", width: \"100%\" }} />\n                {def.example && (\n                  <span>\n                    <b>Example :</b> {def.example}\n                  </span>\n                )}\n                {def.synonyms && (\n                  <span>\n                    <b>Synonyms :</b> {def.synonyms.map((s) => `${s}, `)}\n                  </span>\n                )}\n              </div>\n            ))\n          )\n        )\n      )}\n    </div>\n  );\n};\n\nexport default Definitions;\n","import React, { useEffect, useState } from 'react';\nimport Header from './Header/Header';\nimport axios from 'axios';\nimport Container from '@mui/material/Container';\nimport Definitions from './Defination/Definitions'; \n\nconst Dictionary = (props) => {\n    const [meanings, setMeanings] = useState([]);\n    const [input, setInput] = useState(\"\");\n    const dictionaryApiData = async () => {\n        try {\n          const data = await axios.get(\n            `https://api.dictionaryapi.dev/api/v2/entries/en/${input}`\n          );\n          setMeanings(data.data)\n          console.log(meanings[0].phonetics)\n    \n        } catch {\n    \n        }\n      }\n    \n      useEffect(\n        () => {\n          dictionaryApiData()\n        }, [input]\n      )\n \n return  <div className=\"container\">\n     <h1 className=\"my-3\" style={{color: props.mode ==='dark'?'white':'#042743'}}>Dictionary</h1>\n\n    <div style={{  color: '#000000', height: '100vh' }}>\n      <Container maxWidth=\"md\" style={{ diaplay: 'flex', flexDirection: 'column', height: '100vh' }}>\n        <Header input={input} setInput={setInput} />\n        <Definitions meanings={meanings} word={input} />\n      </Container>\n    </div>\n    </div>\n}\n\nexport default Dictionary;\n","export default __webpack_public_path__ + \"static/media/flipdish-ringer.927828b8.mp3\";","import React,{ useState,useRef } from \"react\";\nimport ringer from \"./flipdish-ringer.mp3\";\nimport {Button, Card, Container, Row, Col,ProgressBar} from 'react-bootstrap';\n\nconst Timer = ()=>{\n  const [value, setValue]=useState(0);\n  const [duration, setDuration]=useState(60);\n  const [timerFlag, setTimerFlag]=useState(false);\n  \n  const audio = new Audio(ringer);\n  const myRef = useRef(audio);\n  const dur_val = useRef(60);\n \n  const durHandler=(e)=>{\n    setDuration(e.target.value)\n    dur_val.current=e.target.value\n  }\n    const startTimer = (e)=>{\n        setTimerFlag(true)\n        //setValue(0)\n        setDuration(duration)\n    };\n    const pauseTimer = ()=>{\n        setTimerFlag(false)\n    }; \n    const timerOff = ()=>{\n        myRef.current.loop = false;\n        myRef.current.pause();\n        setValue(0)\n    };\n\n    if (timerFlag && duration>0){\n        setInterval(setTimeout(()=>{\n            setValue(value+1)\n            setDuration(duration-1);\n            if(duration==1){\n                myRef.current.loop = true;\n                myRef.current.play();\n            } \n        }, 1000), 1000) \n    }\n    let nowp = parseInt(duration*100/dur_val.current)\n    return <>\n   \n        <Container fluid=\"md\" className='mt-5'> \n            <Row>\n                <Col  className=\"py-10\">\n                    <Card>\n                    <Card.Header as=\"h5\">Timer</Card.Header>\n                    <Card.Body>\n                        <Card.Title> Time Lapse : {value} seconds \n                        </Card.Title>\n                        <input onChange={durHandler} name=\"duration\"   /> \n                        <Button className=\"mx-2\" variant=\"outline-primary\" onClick={startTimer}>Start Timer </Button>{' '}\n                        <Button className=\"mx-2\" variant=\"outline-danger\" onClick={pauseTimer}>Pause Timer </Button>{' '}\n                        <Button className=\"mx-2\" variant=\"outline-dark\" onClick={timerOff}>Ok</Button>{' '}\n                    </Card.Body>\n                    <Card.Footer className=\"text-muted\"> Time Remainingh : {duration} seconds    \n                        <ProgressBar now={nowp} className=\"right mt-20\" label={`${nowp}%`}/>\n                    </Card.Footer>\n                    </Card>\n                </Col>\n\n            </Row>\n            \n        </Container>\n    \n   </>\n}\n\nexport default Timer;","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport Dictionary from './components/Dictionary';\nimport Timer from './components/Timer';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    <Router>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <Switch>\n    {/* /users --> Component 1\n        /users/home --> Component 2 */}\n          <Route exact path=\"/dictionary\">\n            <Dictionary mode={mode} />\n          </Route>\n          <Route exact path=\"/timer\">\n            <Timer mode={mode} />\n          </Route>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\">\n            <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\n          </Route>\n    </Switch>\n    </div>\n    </Router>\n    </> \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}